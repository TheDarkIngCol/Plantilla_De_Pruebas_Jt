name: Que ocurriÃ³ un dÃ­a como hoy

on:
  workflow_dispatch:
    inputs:
      month:
        description: "Mes en formato MM"
        required: true
      day:
        description: "DÃ­a en formato DD"
        required: true

env:
  LANG: ${{ vars.LANG }}

jobs:
  fetch-api:
    name: Obtener datos del API
    runs-on: ubuntu-latest
    outputs:
      events: ${{ steps.extract.outputs.events }}
    steps:
      - name: Configurar variables
        run: |
          echo "MONTH=${{ github.event.inputs.month }}" >> $GITHUB_ENV
          echo "DAY=${{ github.event.inputs.day }}" >> $GITHUB_ENV

      - name: Crear hash para cache
        id: hash
        run: |
          hash=$(echo -n "${{ env.LANG }}-${{ env.MONTH }}-${{ env.DAY }}" | sha256sum | cut -d ' ' -f1)
          echo "hash=$hash" >> $GITHUB_OUTPUT

      - name: Restaurar cache de API
        id: cache-api
        uses: actions/cache@v4
        with:
          path: response.json
          key: ${{ steps.hash.outputs.hash }}

      - name: Llamar API Wikimedia si no hay cache
        if: steps.cache-api.outputs.cache-hit != 'true'
        run: |
          curl -s "https://api.wikimedia.org/feed/v1/wikipedia/${{ env.LANG }}/onthisday/selected/${{ env.MONTH }}/${{ env.DAY }}" -o response.json

      - name: Extraer eventos
        id: extract
        run: |
          events=$(jq -c '[.selected[] | {title: .pages[0].title, url: .pages[0].content_urls.desktop.page}]' response.json)
          echo "events=$events" >> $GITHUB_OUTPUT

  process-events:
    name: Procesar eventos
    needs: fetch-api
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        event: ${{ fromJson(needs.fetch-api.outputs.events) }}
    steps:
      - name: Mostrar evento
        run: |
          echo "ðŸ“Œ TÃ­tulo: ${{ matrix.event.title }}"
          echo "ðŸ”— URL: ${{ matrix.event.url }}"

      - name: Descargar HTML del evento
        run: curl -s -L "${{ matrix.event.url }}" -o page.html

      - name: Guardar HTML como artefacto
        uses: actions/upload-artifact@v4
        with:
          name: HTML-${{ matrix.event.title }}
          path: page.html
          retention-days: 1

      - name: Convertir HTML a PDF
        uses: fifsky/html-to-pdf-action@v1
        with:
          htmlFile: page.html
          outputFile: "${{ github.event.inputs.month }}-${{ github.event.inputs.day }}-${{ matrix.event.title }}.pdf"

      - name: Subir artefacto PDF
        uses: actions/upload-artifact@v4
        with:
          name: PDF-${{ matrix.event.title }}
          path: "${{ github.event.inputs.month }}-${{ github.event.inputs.day }}-${{ matrix.event.title }}.pdf"
          retention-days: 1
